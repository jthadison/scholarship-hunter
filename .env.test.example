# Test Environment Configuration
# Copy this file to .env.test and fill in the values

# ============================================================================
# Application URLs
# ============================================================================
BASE_URL=http://localhost:3000
API_URL=http://localhost:3000/api

# ============================================================================
# Database
# ============================================================================
# Use a separate test database to avoid polluting development data
DATABASE_URL=postgresql://user:password@localhost:5432/scholarship_hunter_test
DIRECT_URL=postgresql://user:password@localhost:5432/scholarship_hunter_test

# ============================================================================
# Clerk Authentication (Test Mode)
# ============================================================================
# These should be test-specific Clerk credentials
NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY=pk_test_your_test_key_here
CLERK_SECRET_KEY=sk_test_your_test_secret_here

# Clerk URLs
NEXT_PUBLIC_CLERK_SIGN_IN_URL=/sign-in
NEXT_PUBLIC_CLERK_SIGN_UP_URL=/sign-up
NEXT_PUBLIC_CLERK_AFTER_SIGN_IN_URL=/dashboard
NEXT_PUBLIC_CLERK_AFTER_SIGN_UP_URL=/dashboard

# ============================================================================
# Test User Credentials
# ============================================================================
# Create these test users in Clerk for E2E testing
TEST_USER_EMAIL=test@example.com
TEST_USER_PASSWORD=TestPassword123!

TEST_ADMIN_EMAIL=admin@example.com
TEST_ADMIN_PASSWORD=AdminPassword123!

# ============================================================================
# Feature Flags (Testing)
# ============================================================================
ENABLE_AI_FEATURES=true
ENABLE_ESSAY_GENERATION=true
ENABLE_MATCH_ALGORITHM=true

# ============================================================================
# External Services (Mock/Sandbox)
# ============================================================================
# Use sandbox/test API keys for external services
OPENAI_API_KEY=sk_test_mock_key_for_testing
SVIX_SECRET=whsec_test_mock_webhook_secret

# ============================================================================
# Test Configuration
# ============================================================================
NODE_ENV=test
TEST_TIMEOUT=60000
PLAYWRIGHT_HEADLESS=true
PLAYWRIGHT_SLOW_MO=0

# ============================================================================
# CI-Specific Settings
# ============================================================================
CI=false
GITHUB_ACTIONS=false

# ============================================================================
# Logging & Debugging
# ============================================================================
LOG_LEVEL=error
DEBUG_TESTS=false
TRACE_TESTS=false

# ============================================================================
# Performance & Optimization
# ============================================================================
# Number of parallel test workers (leave empty for auto-detect)
PLAYWRIGHT_WORKERS=
PLAYWRIGHT_RETRIES=2

# ============================================================================
# Storage & File Upload (Test Mode)
# ============================================================================
# Use local or mock storage for testing
STORAGE_PROVIDER=local
STORAGE_PATH=./test-uploads

# ============================================================================
# Email Service (Test Mode)
# ============================================================================
# Use email testing service (e.g., Mailtrap, Ethereal)
SMTP_HOST=smtp.ethereal.email
SMTP_PORT=587
SMTP_USER=test@ethereal.email
SMTP_PASS=test_password

# ============================================================================
# Notes
# ============================================================================
# 1. Never commit .env.test with real credentials
# 2. Use separate test database to avoid data pollution
# 3. Use Clerk's test mode for authentication
# 4. Mock external API calls when possible
# 5. Set up CI environment variables separately
